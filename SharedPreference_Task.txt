import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
          primarySwatch: Colors.indigo,
          visualDensity: VisualDensity.adaptivePlatformDensity),
      title: 'Flutter Demo',
      home: const MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key}) : super(key: key);

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  late SharedPreferences prefs;
  TextEditingController tf1 = TextEditingController();
  dynamic name = '';
  dynamic fn = '';
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Task"),
      ),
      body: Padding(
        padding: const EdgeInsets.only(right: 30.0, left: 30.0),
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextField(
                controller: tf1,
                decoration: const InputDecoration(
                  hintText: 'Enter name',
                ),
              ),
              const SizedBox(
                height: 10,
              ),
              ElevatedButton(
                onPressed: () {
                  save();
                },
                child: Text('Login'),
              ),
              const SizedBox(
                height: 5.0,
              ),
              Text(name.toString()),
              // ElevatedButton(
              //   onPressed: (() {
              //     Navigator.push(
              //         context,
              //         MaterialPageRoute(
              //           builder: (context) => SecondPage(),
              //         ));
              //   }),
              //   child: Text("Home Page"),
              // ),
            ],
          ),
        ),
      ),
    );
  }

  save() async {
    prefs = await SharedPreferences.getInstance();
    await prefs.setString("name", tf1.text.toString());
    String? name1 = prefs.getString("name").toString();
    setState(() {
      name = "Name: $name1";
    });
    setState(() {
      fn = name1;
    });
    String username = name;
    Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => SecondPage(
            username: username,
          ),
        ));
  }
}

class SecondPage extends StatefulWidget {
  final username;
  const SecondPage({Key? key, required this.username}) : super(key: key);

  @override
  State<SecondPage> createState() => _SecondPageState();
}

class _SecondPageState extends State<SecondPage> {
  // void initState() {
  //   super.initState();
  //   fetch();
  // }

  late SharedPreferences prefs;
  //dynamic fn = '';
  dynamic rn = '';
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('HomePage')),
      body: Center(
        child: Column(
          children: [
            Text(widget.username),
            const SizedBox(
              height: 10,
            ),
            // ElevatedButton(
            //   onPressed: () {
            //     fetch();
            //     print("Retrieved $fn");
            //   },
            //   child: Text('Check Name Stored Or Not'),
            // ),
            const SizedBox(
              height: 15,
            ),
            ElevatedButton(
              onPressed: () {
                remove();
                print("Removed $rn");
              },
              child: Text("Logout"),
            ),
          ],
        ),
      ),
    );
  }

  remove() async {
    prefs = await SharedPreferences.getInstance();
    await prefs.remove("name");
    setState(() {
      rn = "Removed";
    });
    Navigator.pop(context);
  }
}
